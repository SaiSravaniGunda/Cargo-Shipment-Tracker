{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Fetch all shipments\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchShipments\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/shipments\");\n    if (!response.ok) throw new Error(\"Failed to fetch shipments\");\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Fetch a single shipment by ID\nexport const fetchShipmentById = createAsyncThunk(\"shipments/fetchShipmentById\", async (shipmentId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(`http://localhost:5000/api/shipment/${shipmentId}`);\n    if (!response.ok) throw new Error(\"Failed to fetch shipment details\");\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Update shipment location\nexport const updateShipmentLocation = createAsyncThunk(\"shipments/updateShipmentLocation\", async ({\n  shipmentId,\n  newLocation\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(`http://localhost:5000/api/shipment/${shipmentId}/update-location`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        currentLocation: newLocation\n      })\n    });\n    if (!response.ok) throw new Error(\"Failed to update location\");\n    return {\n      shipmentId,\n      newLocation\n    };\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst shipmentSlice = createSlice({\n  name: \"shipments\",\n  initialState: {\n    list: [],\n    selectedShipment: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch all shipments\n    .addCase(fetchShipments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchShipments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.list = action.payload;\n    }).addCase(fetchShipments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Fetch shipment by ID\n    .addCase(fetchShipmentById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchShipmentById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.selectedShipment = action.payload;\n    }).addCase(fetchShipmentById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update shipment location\n    .addCase(updateShipmentLocation.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateShipmentLocation.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        shipmentId,\n        newLocation\n      } = action.payload;\n      const shipment = state.list.find(s => s._id === shipmentId);\n      if (shipment) {\n        shipment.currentLocation = newLocation; // Update location in store\n      }\n    }).addCase(updateShipmentLocation.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default shipmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchShipments","_","rejectWithValue","response","fetch","ok","Error","json","error","message","fetchShipmentById","shipmentId","updateShipmentLocation","newLocation","method","headers","body","JSON","stringify","currentLocation","shipmentSlice","name","initialState","list","selectedShipment","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","shipment","find","s","_id","reducer"],"sources":["D:/Shipment Tracker/frontend/src/redux/shipmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Fetch all shipments\r\nexport const fetchShipments = createAsyncThunk(\r\n  \"shipments/fetchShipments\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/shipments\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch shipments\");\r\n      return await response.json();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch a single shipment by ID\r\nexport const fetchShipmentById = createAsyncThunk(\r\n  \"shipments/fetchShipmentById\",\r\n  async (shipmentId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/shipment/${shipmentId}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch shipment details\");\r\n      return await response.json();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Update shipment location\r\nexport const updateShipmentLocation = createAsyncThunk(\r\n  \"shipments/updateShipmentLocation\",\r\n  async ({ shipmentId, newLocation }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/shipment/${shipmentId}/update-location`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ currentLocation: newLocation }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to update location\");\r\n      return { shipmentId, newLocation };\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst shipmentSlice = createSlice({\r\n  name: \"shipments\",\r\n  initialState: { list: [], selectedShipment: null, loading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch all shipments\r\n      .addCase(fetchShipments.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchShipments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.list = action.payload;\r\n      })\r\n      .addCase(fetchShipments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Fetch shipment by ID\r\n      .addCase(fetchShipmentById.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchShipmentById.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.selectedShipment = action.payload;\r\n      })\r\n      .addCase(fetchShipmentById.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Update shipment location\r\n      .addCase(updateShipmentLocation.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateShipmentLocation.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const { shipmentId, newLocation } = action.payload;\r\n        const shipment = state.list.find((s) => s._id === shipmentId);\r\n        if (shipment) {\r\n          shipment.currentLocation = newLocation; // Update location in store\r\n        }\r\n      })\r\n      .addCase(updateShipmentLocation.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default shipmentSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}