{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Fetch all shipments\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchAll\", async () => {\n  const response = await axios.get(\"/shipments\");\n  return response.data;\n});\n\n// Fetch a single shipment by ID\nexport const fetchShipmentById = createAsyncThunk(\"shipments/fetchById\", async id => {\n  const response = await axios.get(`/shipment/${id}`);\n  return response.data;\n});\n\n// Update shipment location\nexport const updateShipmentLocation = createAsyncThunk(\"shipments/updateLocation\", async ({\n  id,\n  location\n}) => {\n  const response = await axios.post(`/shipment/${id}/update-location`, {\n    location\n  });\n  return response.data;\n});\n\n// Fetch ETA\nexport const fetchETA = createAsyncThunk(\"shipments/fetchETA\", async id => {\n  const response = await axios.get(`/shipment/${id}/eta`);\n  return response.data.eta;\n});\nconst shipmentSlice = createSlice({\n  name: \"shipment\",\n  initialState: {\n    shipments: [],\n    shipmentDetails: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchShipments.pending, state => {\n      state.loading = true;\n    }).addCase(fetchShipments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.shipments = action.payload;\n    }).addCase(fetchShipments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(fetchShipmentById.fulfilled, (state, action) => {\n      state.shipmentDetails = action.payload;\n    }).addCase(updateShipmentLocation.fulfilled, (state, action) => {\n      state.shipments = state.shipments.map(shipment => shipment._id === action.payload._id ? action.payload : shipment);\n    }).addCase(fetchETA.fulfilled, (state, action) => {\n      state.shipmentDetails = {\n        ...state.shipmentDetails,\n        eta: action.payload\n      };\n    });\n  }\n});\nexport default shipmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchShipments","response","get","data","fetchShipmentById","id","updateShipmentLocation","location","post","fetchETA","eta","shipmentSlice","name","initialState","shipments","shipmentDetails","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","map","shipment","_id","reducer"],"sources":["D:/Shipment Tracker/frontend/src/redux/shipmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// Fetch all shipments\r\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchAll\", async () => {\r\n  const response = await axios.get(\"/shipments\");\r\n  return response.data;\r\n});\r\n\r\n// Fetch a single shipment by ID\r\nexport const fetchShipmentById = createAsyncThunk(\"shipments/fetchById\", async (id) => {\r\n  const response = await axios.get(`/shipment/${id}`);\r\n  return response.data;\r\n});\r\n\r\n// Update shipment location\r\nexport const updateShipmentLocation = createAsyncThunk(\r\n  \"shipments/updateLocation\",\r\n  async ({ id, location }) => {\r\n    const response = await axios.post(`/shipment/${id}/update-location`, { location });\r\n    return response.data;\r\n  }\r\n);\r\n\r\n// Fetch ETA\r\nexport const fetchETA = createAsyncThunk(\"shipments/fetchETA\", async (id) => {\r\n  const response = await axios.get(`/shipment/${id}/eta`);\r\n  return response.data.eta;\r\n});\r\n\r\nconst shipmentSlice = createSlice({\r\n  name: \"shipment\",\r\n  initialState: {\r\n    shipments: [],\r\n    shipmentDetails: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchShipments.pending, (state) => { state.loading = true; })\r\n      .addCase(fetchShipments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.shipments = action.payload;\r\n      })\r\n      .addCase(fetchShipments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(fetchShipmentById.fulfilled, (state, action) => {\r\n        state.shipmentDetails = action.payload;\r\n      })\r\n      .addCase(updateShipmentLocation.fulfilled, (state, action) => {\r\n        state.shipments = state.shipments.map((shipment) =>\r\n          shipment._id === action.payload._id ? action.payload : shipment\r\n        );\r\n      })\r\n      .addCase(fetchETA.fulfilled, (state, action) => {\r\n        state.shipmentDetails = { ...state.shipmentDetails, eta: action.payload };\r\n      });\r\n  },\r\n});\r\n\r\nexport default shipmentSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}