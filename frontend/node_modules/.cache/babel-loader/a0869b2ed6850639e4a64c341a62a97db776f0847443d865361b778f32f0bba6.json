{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Backend API URL\nconst API_URL = \"http://localhost:5000/api\";\n\n// Fetch all shipments\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchAll\", async () => {\n  const response = await axios.get(`${API_URL}/shipments`);\n  return response.data;\n});\n\n// Fetch shipment by ID\nexport const fetchShipmentById = createAsyncThunk(\"shipments/fetchById\", async id => {\n  const response = await axios.get(`${API_URL}/shipment/${id}`);\n  return response.data;\n});\n\n// Create a new shipment\nexport const createShipment = createAsyncThunk(\"shipments/create\", async shipmentData => {\n  const response = await axios.post(`${API_URL}/shipment`, shipmentData);\n  return response.data;\n});\n\n// Update shipment location\nexport const updateShipmentLocation = createAsyncThunk(\"shipments/updateLocation\", async ({\n  id,\n  currentLocation\n}) => {\n  const response = await axios.post(`${API_URL}/shipment/${id}/update-location`, {\n    currentLocation\n  });\n  return response.data;\n});\n\n// Get estimated arrival time\nexport const fetchETA = createAsyncThunk(\"shipments/fetchETA\", async id => {\n  const response = await axios.get(`${API_URL}/shipment/${id}/eta`);\n  return response.data.estimatedArrival;\n});\nconst shipmentSlice = createSlice({\n  name: \"shipment\",\n  initialState: {\n    shipments: [],\n    shipment: null,\n    eta: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchShipments.pending, state => {\n      state.loading = true;\n    }).addCase(fetchShipments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.shipments = action.payload;\n    }).addCase(fetchShipments.rejected, state => {\n      state.loading = false;\n    }).addCase(fetchShipmentById.fulfilled, (state, action) => {\n      state.shipment = action.payload;\n    }).addCase(fetchETA.fulfilled, (state, action) => {\n      state.eta = action.payload;\n    });\n  }\n});\nexport default shipmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchShipments","response","get","data","fetchShipmentById","id","createShipment","shipmentData","post","updateShipmentLocation","currentLocation","fetchETA","estimatedArrival","shipmentSlice","name","initialState","shipments","shipment","eta","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/Shipment Tracker/frontend/src/redux/shipmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// Backend API URL\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Fetch all shipments\r\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchAll\", async () => {\r\n  const response = await axios.get(`${API_URL}/shipments`);\r\n  return response.data;\r\n});\r\n\r\n// Fetch shipment by ID\r\nexport const fetchShipmentById = createAsyncThunk(\"shipments/fetchById\", async (id) => {\r\n  const response = await axios.get(`${API_URL}/shipment/${id}`);\r\n  return response.data;\r\n});\r\n\r\n// Create a new shipment\r\nexport const createShipment = createAsyncThunk(\"shipments/create\", async (shipmentData) => {\r\n  const response = await axios.post(`${API_URL}/shipment`, shipmentData);\r\n  return response.data;\r\n});\r\n\r\n// Update shipment location\r\nexport const updateShipmentLocation = createAsyncThunk(\"shipments/updateLocation\", async ({ id, currentLocation }) => {\r\n  const response = await axios.post(`${API_URL}/shipment/${id}/update-location`, { currentLocation });\r\n  return response.data;\r\n});\r\n\r\n// Get estimated arrival time\r\nexport const fetchETA = createAsyncThunk(\"shipments/fetchETA\", async (id) => {\r\n  const response = await axios.get(`${API_URL}/shipment/${id}/eta`);\r\n  return response.data.estimatedArrival;\r\n});\r\n\r\nconst shipmentSlice = createSlice({\r\n  name: \"shipment\",\r\n  initialState: {\r\n    shipments: [],\r\n    shipment: null,\r\n    eta: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchShipments.pending, (state) => { state.loading = true; })\r\n      .addCase(fetchShipments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.shipments = action.payload;\r\n      })\r\n      .addCase(fetchShipments.rejected, (state) => { state.loading = false; })\r\n\r\n      .addCase(fetchShipmentById.fulfilled, (state, action) => {\r\n        state.shipment = action.payload;\r\n      })\r\n      .addCase(fetchETA.fulfilled, (state, action) => {\r\n        state.eta = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default shipmentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC/E,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAY,CAAC;EACxD,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAAC,qBAAqB,EAAE,MAAOQ,EAAE,IAAK;EACrF,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,aAAaM,EAAE,EAAE,CAAC;EAC7D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,cAAc,GAAGT,gBAAgB,CAAC,kBAAkB,EAAE,MAAOU,YAAY,IAAK;EACzF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,WAAW,EAAEQ,YAAY,CAAC;EACtE,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,sBAAsB,GAAGZ,gBAAgB,CAAC,0BAA0B,EAAE,OAAO;EAAEQ,EAAE;EAAEK;AAAgB,CAAC,KAAK;EACpH,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,aAAaM,EAAE,kBAAkB,EAAE;IAAEK;EAAgB,CAAC,CAAC;EACnG,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMQ,QAAQ,GAAGd,gBAAgB,CAAC,oBAAoB,EAAE,MAAOQ,EAAE,IAAK;EAC3E,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,aAAaM,EAAE,MAAM,CAAC;EACjE,OAAOJ,QAAQ,CAACE,IAAI,CAACS,gBAAgB;AACvC,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGjB,WAAW,CAAC;EAChCkB,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,IAAI;IACdC,GAAG,EAAE,IAAI;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,cAAc,CAACyB,OAAO,EAAGC,KAAK,IAAK;MAAEA,KAAK,CAACP,OAAO,GAAG,IAAI;IAAE,CAAC,CAAC,CACrEK,OAAO,CAACxB,cAAc,CAAC2B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACV,SAAS,GAAGY,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDL,OAAO,CAACxB,cAAc,CAAC8B,QAAQ,EAAGJ,KAAK,IAAK;MAAEA,KAAK,CAACP,OAAO,GAAG,KAAK;IAAE,CAAC,CAAC,CAEvEK,OAAO,CAACpB,iBAAiB,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACT,QAAQ,GAAGW,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDL,OAAO,CAACb,QAAQ,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACR,GAAG,GAAGU,MAAM,CAACC,OAAO;IAC5B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,aAAa,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}