{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Fetch all shipments\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchShipments\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/shipments\");\n    if (!response.ok) throw new Error(\"Failed to fetch shipments\");\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Fetch a single shipment by ID\nexport const fetchShipmentById = createAsyncThunk(\"shipments/fetchShipmentById\", async (shipmentId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(`http://localhost:5000/api/shipments/${shipmentId}`);\n    if (!response.ok) throw new Error(\"Failed to fetch shipment details\");\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst shipmentSlice = createSlice({\n  name: \"shipments\",\n  initialState: {\n    list: [],\n    selectedShipment: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchShipments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchShipments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.list = action.payload;\n    }).addCase(fetchShipments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchShipmentById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchShipmentById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.selectedShipment = action.payload;\n    }).addCase(fetchShipmentById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default shipmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchShipments","_","rejectWithValue","response","fetch","ok","Error","json","error","message","fetchShipmentById","shipmentId","shipmentSlice","name","initialState","list","selectedShipment","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/Shipment Tracker/frontend/src/redux/shipmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Fetch all shipments\r\nexport const fetchShipments = createAsyncThunk(\r\n  \"shipments/fetchShipments\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/shipments\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch shipments\");\r\n      return await response.json();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch a single shipment by ID\r\nexport const fetchShipmentById = createAsyncThunk(\r\n  \"shipments/fetchShipmentById\",\r\n  async (shipmentId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/shipments/${shipmentId}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch shipment details\");\r\n      return await response.json();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst shipmentSlice = createSlice({\r\n  name: \"shipments\",\r\n  initialState: { list: [], selectedShipment: null, loading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchShipments.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchShipments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.list = action.payload;\r\n      })\r\n      .addCase(fetchShipments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchShipmentById.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchShipmentById.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.selectedShipment = action.payload;\r\n      })\r\n      .addCase(fetchShipmentById.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default shipmentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,cAAc,GAAGD,gBAAgB,CAC5C,0BAA0B,EAC1B,OAAOE,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9D,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAON,eAAe,CAACM,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGX,gBAAgB,CAC/C,6BAA6B,EAC7B,OAAOY,UAAU,EAAE;EAAET;AAAgB,CAAC,KAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCO,UAAU,EAAE,CAAC;IACjF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IACrE,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAON,eAAe,CAACM,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,MAAMG,aAAa,GAAGd,WAAW,CAAC;EAChCe,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,gBAAgB,EAAE,IAAI;IAAEC,OAAO,EAAE,KAAK;IAAET,KAAK,EAAE;EAAK,CAAC;EAC/EU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,cAAc,CAACsB,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDa,OAAO,CAACrB,cAAc,CAACwB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACrB,cAAc,CAAC2B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACX,iBAAiB,CAACY,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDa,OAAO,CAACX,iBAAiB,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,gBAAgB,GAAGS,MAAM,CAACC,OAAO;IACzC,CAAC,CAAC,CACDL,OAAO,CAACX,iBAAiB,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}