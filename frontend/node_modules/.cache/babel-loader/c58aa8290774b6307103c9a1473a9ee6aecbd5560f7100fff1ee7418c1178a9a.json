{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Async thunk to fetch shipments from backend\nexport const fetchShipments = createAsyncThunk(\"shipments/fetchShipments\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/shipments\");\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch shipments\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst shipmentSlice = createSlice({\n  name: \"shipments\",\n  initialState: {\n    list: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchShipments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchShipments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.list = action.payload;\n    }).addCase(fetchShipments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload; // Store error message for debugging\n    });\n  }\n});\nexport default shipmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchShipments","_","rejectWithValue","response","fetch","ok","Error","data","json","error","message","shipmentSlice","name","initialState","list","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/Shipment Tracker/frontend/src/redux/shipmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Async thunk to fetch shipments from backend\r\nexport const fetchShipments = createAsyncThunk(\r\n  \"shipments/fetchShipments\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/shipments\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch shipments\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst shipmentSlice = createSlice({\r\n  name: \"shipments\",\r\n  initialState: { list: [], loading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchShipments.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchShipments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.list = action.payload;\r\n      })\r\n      .addCase(fetchShipments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload; // Store error message for debugging\r\n      });\r\n  },\r\n});\r\n\r\nexport default shipmentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,cAAc,GAAGD,gBAAgB,CAC5C,0BAA0B,EAC1B,OAAOE,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IAEnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOP,eAAe,CAACO,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,MAAMC,aAAa,GAAGb,WAAW,CAAC;EAChCc,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,KAAK;IAAEN,KAAK,EAAE;EAAK,CAAC;EACvDO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,cAAc,CAACoB,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDU,OAAO,CAACnB,cAAc,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACnB,cAAc,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}